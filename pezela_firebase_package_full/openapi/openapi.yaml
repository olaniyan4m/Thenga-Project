openapi: 3.0.3
info:
  title: Pezela Core API (Firebase-backed)
  version: "1.0.0"
  description: Core merchant / product / order / payment webhook API for Pezela.
servers:
  - url: https://api.pezela.co
paths:
  /auth/register:
    post:
      summary: Register merchant (creates Firebase Auth user and merchant doc)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Created
  /auth/login:
    post:
      summary: Login (delegated to Firebase Auth; endpoint issues custom token)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
  /merchants/{merchantId}/catalog:
    get:
      summary: List products for merchant (reads from Firestore)
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product list
    post:
      summary: Create product (writes product doc to Firestore)
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Created
  /merchants/{merchantId}/orders:
    post:
      summary: Create order (writes order doc; triggers payment link generation)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          description: Order created
  /payments/webhook:
    post:
      summary: Payment provider webhook (provider notifies, we reconcile in Firestore)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Received
components:
  schemas:
    RegisterRequest:
      type: object
      required: [name, phone, businessName]
      properties:
        name: { type: string }
        phone: { type: string }
        businessName: { type: string }
        email: { type: string }
    LoginRequest:
      type: object
      required: [phone, password]
      properties:
        phone: { type: string }
        password: { type: string }
    ProductCreate:
      type: object
      required: [name, price]
      properties:
        name: { type: string }
        sku: { type: string }
        price: { type: number }
        stock: { type: integer }
    OrderCreate:
      type: object
      required: [items, customer]
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              productId: { type: string }
              quantity: { type: integer }
        customer:
          type: object
          properties:
            name: { type: string }
            phone: { type: string }
            address: { type: string }
