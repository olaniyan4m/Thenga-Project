version: '3.8'

services:
  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: pezela-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: pezela-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=pezela123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: pezela-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  # Redis Exporter - Redis metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: pezela-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    networks:
      - monitoring

  # PostgreSQL Exporter - Database metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: pezela-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://pezela:pezela123@postgres:5432/pezela?sslmode=disable
    networks:
      - monitoring

  # Alertmanager - Alert handling
  alertmanager:
    image: prom/alertmanager:latest
    container_name: pezela-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - monitoring

  # Sentry - Error tracking
  sentry:
    image: sentry:latest
    container_name: pezela-sentry
    ports:
      - "9000:9000"
    volumes:
      - sentry_data:/var/lib/sentry/files
    environment:
      - SENTRY_SECRET_KEY=your-secret-key-here
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_POSTGRES_PORT=5432
      - SENTRY_POSTGRES_DBNAME=sentry
      - SENTRY_POSTGRES_USER=pezela
      - SENTRY_POSTGRES_PASSWORD=pezela123
      - SENTRY_REDIS_HOST=redis
      - SENTRY_REDIS_PORT=6379
    networks:
      - monitoring

  # Uptime Robot - External monitoring
  uptime-robot:
    image: uptimerobot/uptimerobot-cli:latest
    container_name: pezela-uptime-robot
    environment:
      - UPTIMEROBOT_API_KEY=your-uptime-robot-api-key
    networks:
      - monitoring

  # Caddy - Reverse proxy and load balancer
  caddy:
    image: caddy:latest
    container_name: pezela-caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  sentry_data:
  caddy_data:
  caddy_config:

networks:
  monitoring:
    driver: bridge
