workflows:
  react-native-ios:
    name: React Native iOS
    max_build_duration: 120
    instance_type: mac_mini_m1
    # integrations:
    #   app_store_connect: codemagic
    environment:
      # ios_signing:
      #   distribution_type: development
      #   bundle_identifier: com.thenga.commerce
      vars:
        BUNDLE_ID: "com.thenga.commerce"
        XCODE_PROJECT: "apps/mobile-app/ios/Thenga.xcodeproj"
        XCODE_SCHEME: "Thenga"
        APP_STORE_APPLE_ID: 1097265059220834
        APP_STORE_APP_SECRET: "3f1cf7aad0f4b83dc44714d21b62fdcb"
        APPLE_ID: "m.olaniyan@icloud.com"
        TEAM_ID: "YJJA9A296N"
        SUPPORT_EMAIL: "support@thenga.mozdev.co.za"
        SUPPORT_URL: "https://thenga.mozdev.co.za/support"
        MARKETING_URL: "https://thenga.mozdev.co.za"
    scripts:
      - name: Install dependencies
        script: | 
          # Check Node.js and npm versions
          node --version
          npm --version
          
          # Install mobile app dependencies directly
          echo "Installing mobile app dependencies..."
          cd apps/mobile-app
          npm install --legacy-peer-deps --no-optional
          
          # Create node_modules symlink in root for CocoaPods
          cd ../..
          ln -sf apps/mobile-app/node_modules node_modules
      - name: Skip code signing setup
        script: |
          echo "Building without code signing for simulator"
      - name: Fix + Build iOS App
        script: | 
          set -e  # stop if any command fails
          
          echo "🚀 Starting iOS build setup..."
          
          #############################################
          # 1️⃣ Go to iOS folder
          #############################################
          cd apps/mobile-app/ios || { echo "❌ iOS folder not found!"; exit 1; }
          echo "📂 Current directory: $(pwd)"
          ls -la
          
          #############################################
          # 2️⃣ Ensure CocoaPods is installed
          #############################################
          echo "💎 Installing CocoaPods..."
          gem install cocoapods --no-document || sudo gem install cocoapods --no-document
          pod --version
          
          #############################################
          # 3️⃣ Fix any stale caches and clean environment
          #############################################
          echo "🧹 Cleaning old Pods and cache..."
          rm -rf Pods Podfile.lock ~/Library/Caches/CocoaPods DerivedData
          pod cache clean --all
          
          #############################################
          # 4️⃣ Fix duplicate RCT-Folly source issue
          #############################################
          PODFILE="Podfile"
          if grep -q "pod 'RCT-Folly'" "$PODFILE"; then
            echo "⚙️ Cleaning duplicate RCT-Folly entries..."
            # Remove all RCT-Folly lines first
            sed -i '' "/pod 'RCT-Folly'/d" "$PODFILE"
            # Add the correct one back
            echo "  Adding correct RCT-Folly reference..."
            echo "  pod 'RCT-Folly', :podspec => '../node_modules/react-native/third-party-podspecs/RCT-Folly.podspec'" >> "$PODFILE"
          fi
          
          #############################################
          # 5️⃣ Apply official Boost fix (GitHub verified)
          #############################################
          BOOST_PODSPEC="../node_modules/react-native/third-party-podspecs/boost.podspec"
          if [ -f "$BOOST_PODSPEC" ]; then
            echo "🛠️ Applying official Boost fix..."
            
            # Apply the official GitHub-verified fix
            sed -i.bak "s|https://github.com/react-native-community/boost-for-react-native/releases/download/v1.76.0/boost_1_76_0.tar.bz2|https://sourceforge.net/projects/boost/files/boost/1.76.0/boost_1_76_0.tar.bz2|g" "$BOOST_PODSPEC"
            sed -i.bak "s|:sha256 => '.*'|:sha256 => 'f0397ba6e982c4450f27bf32a2a83292aba035b827a5623a14636ea583318c41'|" "$BOOST_PODSPEC"
            rm -f "${BOOST_PODSPEC}.bak"
            
            echo "✅ Boost podspec patched with official fix"
          fi
          
          #############################################
          # 6️⃣ Install pods safely
          #############################################
          echo "📦 Installing Pods..."
          if ! pod install --repo-update --verbose; then
            echo "❌ pod install failed, retrying..."
            pod deintegrate
            pod install --repo-update --verbose
          fi
          
          #############################################
          # 7️⃣ Verify workspace exists
          #############################################
          WORKSPACE_PATH=$(find . -type d -name "*.xcworkspace" | head -n 1)

          if [ -z "$WORKSPACE_PATH" ]; then
            echo "❌ No .xcworkspace directory found in $(pwd)"
            echo "Contents:"
            ls -la
            exit 1
          else
            echo "✅ Found workspace: $WORKSPACE_PATH"
          fi
          
          #############################################
          # 8️⃣ Set build number if provided
          #############################################
          if [ -n "$BUILD_NUMBER" ]; then
            echo "🔢 Setting build number to $BUILD_NUMBER..."
            agvtool new-version -all "$BUILD_NUMBER" || echo "⚠️ Skipping build number update."
          fi
          
          #############################################
          # 9️⃣ Build app
          #############################################
          echo "🏗  Building iOS app..."
          xcodebuild \
            -workspace "$WORKSPACE_PATH" \
            -scheme Thenga \
            -configuration Release \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.5' \
            build
          
          #############################################
          # ✅ Done
          #############################################
          echo "🎉 Build completed successfully!"
    artifacts:
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - apps/mobile-app/ios/build/**/*.app
      - apps/mobile-app/ios/Build/**/*.app
      - /tmp/xcodebuild_logs/*.log
    publishing:
      email:
        recipients:
          - olaniyan4m@gmail.com
        notify:
          success: true
          failure: false
      # app_store_connect:
      #   auth: integration
      #   apple_id: m.olaniyan@icloud.com
      #   submit_to_testflight: true
      #   beta_groups:
      #     - Testers
      #   submit_to_app_store: false

  react-native-android:
    name: React Native Android
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      android_signing:
        - keystore_reference
      groups:
        - google_play
      vars:
        PACKAGE_NAME: "com.thenga.commerce"
    scripts:
      - name: Set Android SDK location
        script: | 
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/apps/mobile-app/android/local.properties"
      - name: Install npm dependencies
        script: | 
          cd apps/mobile-app
          npm install
      - name: Build Android release
        script: | 
          LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(google-play get-latest-build-number --package-name "$PACKAGE_NAME")
          if [ -z $LATEST_GOOGLE_PLAY_BUILD_NUMBER ]; then
              UPDATED_BUILD_NUMBER=$BUILD_NUMBER
          else
              UPDATED_BUILD_NUMBER=$(($LATEST_GOOGLE_PLAY_BUILD_NUMBER + 1))
          fi
          cd apps/mobile-app/android
          ./gradlew bundleRelease \
            -PversionCode=$UPDATED_BUILD_NUMBER \
            -PversionName=1.0.$UPDATED_BUILD_NUMBER
    artifacts:
      - apps/mobile-app/android/app/build/outputs/**/*.aab
    publishing:
      email:
        recipients:
          - olaniyan4m@gmail.com
        notify:
          success: true
          failure: false
      google_play:
        credentials: $GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: true
