workflows:
  react-native-ios:
    name: React Native iOS
    max_build_duration: 120
    instance_type: mac_mini_m1
    # integrations:
    #   app_store_connect: codemagic
    environment:
      # ios_signing:
      #   distribution_type: development
      #   bundle_identifier: com.thenga.commerce
      vars:
        BUNDLE_ID: "com.thenga.commerce"
        XCODE_PROJECT: "apps/mobile-app/ios/Thenga.xcodeproj"
        XCODE_SCHEME: "Thenga"
        APP_STORE_APPLE_ID: 1097265059220834
        APP_STORE_APP_SECRET: "3f1cf7aad0f4b83dc44714d21b62fdcb"
        APPLE_ID: "m.olaniyan@icloud.com"
        TEAM_ID: "YJJA9A296N"
        SUPPORT_EMAIL: "support@thenga.mozdev.co.za"
        SUPPORT_URL: "https://thenga.mozdev.co.za/support"
        MARKETING_URL: "https://thenga.mozdev.co.za"
    scripts:
      - name: Install dependencies
        script: | 
          # Check Node.js and npm versions
          node --version
          npm --version
          
          # Install mobile app dependencies directly
          echo "Installing mobile app dependencies..."
          cd apps/mobile-app
          npm install --legacy-peer-deps --no-optional
          
          # Create node_modules symlink in root for CocoaPods
          cd ../..
          ln -sf apps/mobile-app/node_modules node_modules
      - name: Skip code signing setup
        script: |
          echo "Building without code signing for simulator"
      - name: Skip CocoaPods - Use React Native CLI directly
        script: | 
          cd apps/mobile-app
          
          # Debug: Show current directory and files
          echo "Current directory: $(pwd)"
          echo "Files in directory:"
          ls -la
          
          # Check if React Native CLI is available
          echo "Checking React Native CLI..."
          npx react-native --version
          
          # Skip CocoaPods entirely and use React Native CLI
          echo "Skipping CocoaPods due to persistent issues..."
          echo "Using React Native CLI for iOS build instead..."
      - name: Set build number
        script: | 
          cd apps/mobile-app/ios
          agvtool new-version -all $BUILD_NUMBER
      - name: Build for iOS Simulator using React Native CLI
        script: | 
          cd apps/mobile-app
          
          # Use React Native CLI to build for iOS simulator
          # This will handle dependencies automatically
          npx react-native run-ios --simulator="iPhone 15" --configuration=Release --no-packager
    artifacts:
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - apps/mobile-app/ios/build/**/*.app
      - apps/mobile-app/ios/Build/**/*.app
      - /tmp/xcodebuild_logs/*.log
    publishing:
      email:
        recipients:
          - olaniyan4m@gmail.com
        notify:
          success: true
          failure: false
      # app_store_connect:
      #   auth: integration
      #   apple_id: m.olaniyan@icloud.com
      #   submit_to_testflight: true
      #   beta_groups:
      #     - Testers
      #   submit_to_app_store: false

  react-native-android:
    name: React Native Android
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      android_signing:
        - keystore_reference
      groups:
        - google_play
      vars:
        PACKAGE_NAME: "com.thenga.commerce"
    scripts:
      - name: Set Android SDK location
        script: | 
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/apps/mobile-app/android/local.properties"
      - name: Install npm dependencies
        script: | 
          cd apps/mobile-app
          npm install
      - name: Build Android release
        script: | 
          LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(google-play get-latest-build-number --package-name "$PACKAGE_NAME")
          if [ -z $LATEST_GOOGLE_PLAY_BUILD_NUMBER ]; then
              UPDATED_BUILD_NUMBER=$BUILD_NUMBER
          else
              UPDATED_BUILD_NUMBER=$(($LATEST_GOOGLE_PLAY_BUILD_NUMBER + 1))
          fi
          cd apps/mobile-app/android
          ./gradlew bundleRelease \
            -PversionCode=$UPDATED_BUILD_NUMBER \
            -PversionName=1.0.$UPDATED_BUILD_NUMBER
    artifacts:
      - apps/mobile-app/android/app/build/outputs/**/*.aab
    publishing:
      email:
        recipients:
          - olaniyan4m@gmail.com
        notify:
          success: true
          failure: false
      google_play:
        credentials: $GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: true
